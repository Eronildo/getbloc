{
  "Controller": {
    "prefix": "controller",
    "body": [
      "class ${1:Subject}Controller extends Controller<$1Event, $1State> {",
      "\t${1:Subject}Controller() : super(${1:Subject}Initial());",
      "",
      "\t@override",
      "\tStream<$1State> mapEventToState($1Event event) async* {",
      "\t\t${3:// TODO: implement mapEventToState}",
      "\t}",
      "}"
    ]
  },
  "StateController": {
    "prefix": "statecontroller",
    "body": [
      "class ${1:Subject}Controller extends StateController<$1State> {",
      "\t${1:Subject}Controller() : super(${1:Subject}Initial());",
      "}"
    ]
  },
  "ObserverController": {
    "prefix": "observercontroller",
    "body": [
      "import 'package:getbloc/getbloc.dart';",
      "",
      "class ${1:My}ObserverController extends ObserverController {",
      "\t@override",
      "\tvoid onEvent(Controller controller, Object? event) {",
      "\t\tsuper.onEvent(controller, event);",
      "\t\t${2:// TODO: implement onEvent}",
      "\t}",
      "",
      "\t@override",
      "\tvoid onError(BaseController controller, Object error, StackTrace stacktrace) {",
      "\t\t${3:// TODO: implement onError}",
      "\t\tsuper.onError(controller, error, stacktrace);",
      "\t}",
      "",
      "\t@override",
      "\tvoid onChange(BaseController controller, StateChange change) {",
      "\t\tsuper.onChange(controller, change);",
      "\t\t${4:// TODO: implement onChange}",
      "\t}",
      "",
      "\t@override",
      "\tvoid onTransform(Controller controller, TransformController transition) {",
      "\t\tsuper.onTransform(controller, transition);",
      "\t\t${4:// TODO: implement onTransform}",
      "\t}",
      "}"
    ]
  },
  "Controller State": {
    "prefix": "controllerstate",
    "body": [
      "class ${1:Subject}${2:Verb}${3:State} extends $1State {",
      "\tconst $1$2$3($5);",
      "",
      "\t$4",
      "",
      "\t@override",
      "\tList<Object> get props => [$6];",
      "}"
    ],
    "description": "Subject + Verb (action) + State"
  },
  "Controller Event": {
    "prefix": "controllerevent",
    "body": [
      "class ${1:Subject}${2:Noun}${3:Verb} extends $1Event {",
      "\tconst $1$2$3($5);",
      "",
      "\t$4",
      "",
      "\t@override",
      "\tList<Object> get props => [$6];",
      "}"
    ],
    "description": "Subject + Noun (optional) + Verb (event)"
  },
  "Import package:getbloc": {
    "prefix": "importgetbloc",
    "body": "import 'package:getbloc/getbloc.dart';"
  },
  "ListenerWidget": {
    "prefix": "listenerwidget",
    "body": [
      "ListenerWidget(",
      "\tcontroller,",
      "\t(state) {",
      "\t\t${3:// TODO: implement listener}",
      "\t},",
      "\tchild: ${4:Container()},",
      ")"
    ]
  }
}
